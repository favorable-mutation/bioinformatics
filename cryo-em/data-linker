#!/usr/bin/env python2.7

# ---------------------------------------------------------------
# This script runs an 'ln -s' command to create links to all
# files in the input directory specified by the given extension
# in the given output directory.
#
# It should be run from the directory containing the files to be
# linked to, unless an input directory is specified.
#
# The 'ln -s' command will link to  all files created during the 
# specified time interval in the specified output directory,
# then stop.
# ---------------------------------------------------------------

# TODO port this script to python 3

# import modules for interacting with the operating system
import os
import sys
import time
import datetime

# import module for creating functions with option to pass them arguments
import argparse

# initialize a parser object that can process arguments
parser = argparse.ArgumentParser(
        description=
        "This script runs an 'ln -s' command to create links to all files in \
        the input directory specified by the given extension in the given output \
        directory. It should be run from the directory containing the files to \
        be linked to, unless an input directory is specified. The 'ln -s' \
        command will link to  all files created during the specified time \
        interval in the specified output directory, then stop.")

# add an argument 'time' for the user to specify the time in hours until
# all data has been collected and the transfer can stop
parser.add_argument("-t", "--time", type=int, required=True,
        help="Expected runtime of data collection in hours. Required.")

# add an argument 'input_dir' for specifying the input directory for the transfer
parser.add_argument("-i", "--input_dir", type=str, default=os.getcwd(),
        help="Input directory for the data transfer. Defaults to the current directory.")

# add an argument 'output_dir' for specifying the output directory for the
# transfer
parser.add_argument("-o", "--output_dir", type=str, required=True,
        help="Destination/output directory in which to put the links. Required. \
        Use of absolute paths is recommended.")

# add an argument 'extension' for specifying the input directory for the
# transfer
parser.add_argument("-e", "--extension", type=str, default="",
        help="File extension for the data transfer. Defaults to '', which \
        targets all files. Specify an extension (including the dot, as in \
        .txt) to change this behavior.")

# initialize the variable 'args' as the list of arguments for the parser
args = parser.parse_args()

# initialize the variables 'ext', 'out', and 'inp' as various arguments from
# the parser
ext = args.extension
out = args.output_dir
inp = args.input_dir

# initialize the variable 'copy_endtime' as the current time plus 3600 seconds
# for every expected hour of data collection
copy_endtime = time.time() + 3600 * (args.time)

# make the output directory, if it doesn't exist yet
os.system("mkdir {out}".format(out=out))

# while the current time is less than the 'copy_endtime' variable
while time.time() < copy_endtime:

    # run an ln operation using the parameters given in 'args' to link
    # to all files of the given 'extension' in the 'input_directory' in the
    # given 'output-directory' for the given 'time'
    os.system("ln -s {inp}/*{ext:s} {out}".format(ext=ext, out=out, inp=inp))

    # wait for 60 seconds before exiting
    time.sleep(60)

# print a confirmation message when script has finished running
print "\nData linking completed."
